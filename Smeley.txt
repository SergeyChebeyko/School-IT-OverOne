#GIT - система контроля версий, которая используется при работе над проектом с командой, либо при необходимости загрузить проект в интернет (на удаленный сервер github.com)

#Возможности GIT:
# откатить изменения проекта на более старую версию
# сравнить несколько версий
# анализ изменений
# merge (слияние веток)
# смотреть историю изменений проекта


# Репозиторий - хранилище вашего кода и истории всех его изменений.
# Репозиторий внутри нашего проекта - это папка .git. По умолчанию она является скрытой.
# Репозиторий может быть локальным или удаленным. Локальный - хранится внутри проекта на компьютере. Удаленный хранится на сайте github.com в вашем профиле.

# У файлов гита есть 4 состояния:
# неотслеживаемое (untracked) - файлы красного цвета
# измененные (modified)
# подготовленные (staged)
# закомиченные (committed)


#Коммит - это основной объект в управлении контроля версий. Содержит все изменния проекта за время существования коммита.
#Коммит хранит 4 пункта информации:
# 1. Номер коммита
# 2. Имя автора
# 3. Дата создания коммита
# 4. Комментарий, что было сделано во время коммита

#Ветка - это указатель какого-то коммита.

#Когда создавать commit:
# - создан новый функционал
# - добавлен новый блок на верстке
# - исправлены ошибки в коде
# - завершили работу или рабочий день (хотите сохранить изменния)


#Task 1.
# В папке проекта создайте пустой текстовый файл.
# Добавьте его в git
# Измените файл, записав туда текст
# Выполните команду git diff(можем посмотреть на изменения, которые были произведены над файлом)
# Добавьте изменённый файл в git
# Создайте коммит и выведите список всех коммитов
#
# После каждой команды проверяйте статус Вашего файла


#Дз на четверг (Ivanov_Lesson_13.py)
# Создайте новый проект.
# С помощь консоли Git bush (или любой другой) создайте локальный репозиторий в папке проекта (git init).
# В локальном репозитории добавьте новый текстовый файл.
# Затем создайте новую ветку и измените в ней текстовый файл.
# После чего соедините ветки.
# Локальный репозиторий опубликуйте на GitHub с помощью консоли GitBush или с помощью PyCharm через Share on GitHub
#Сбрасываем мне ссылку на проект на GitHub
